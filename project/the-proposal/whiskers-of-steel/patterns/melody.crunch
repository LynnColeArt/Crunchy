require('../config/constants');

// Core melodic motifs
export const MOTIFS = {
    verse_main: [
        [D4, F4, A4, D5],     // Main phrase
        [C5, A4, F4, D4],     // Response
        [Bb3, D4, F4, A4],    // Question
        [G4, E4, D4]          // Answer
    ],
    
    chorus_hook: [
        [D5, C5, Bb4, A4],    // "Queen of the barnyard"
        [A4, G4, F4, D4],     // "Terror of the field"
        [F4, A4, D5],         // Rising motif
        [D5, A4, D4]          // Resolution
    ],

    bridge_tension: [
        [F4, G4, A4, Bb4],    // Rising
        [C5, Bb4, A4, G4],    // Falling
        [F4, A4, C5, D5]      // Peak
    ]
};

// Melodic Variations
export const VARIATIONS = {
    folk_ornaments: {
        grace_notes: [-2, -1],     // Standard grace note intervals
        slides: [true, false],     // Slide into notes pattern
        vibrato: "light"           // Folk-style vibrato
    },
    
    metal_adaption: {
        intervals: [5, 7],         // Power intervals
        rhythm: "driving",
        articulation: "aggressive"
    }
};

// Performance-specific transformations
export const TRANSFORMS = {
    to_acoustic: (melody) => ({
        ...melody,
        ornaments: VARIATIONS.folk_ornaments,
        dynamics: "intimate",
        articulation: "flowing"
    }),
    
    to_metal: (melody) => ({
        ...melody,
        power_notes: true,
        variations: VARIATIONS.metal_adaption,
        articulation: "aggressive"
    })
};

// Melodic Rules
export const RULES = {
    allowed_intervals: [-4, -2, -1, 1, 2, 4],  // Permitted jumps
    cadence_notes: [D4, A4, D5],               // Resolution points
    tension_notes: [Bb4, C5],                  // Build tension
    avoid_notes: [B4, E5]                      // Notes to avoid
};

// Export with context awareness
export default {
    motifs: MOTIFS,
    style: PERFORMANCE_TYPE === "acoustic" ? 
        TRANSFORMS.to_acoustic :
        TRANSFORMS.to_metal,
    rules: RULES,
    
    // Helper function for generating variations
    generate_variation: (motif, intensity) => {
        let variation = {...motif};
        if (intensity > 0.7) {
            variation.ornaments = VARIATIONS.metal_adaption;
        } else if (intensity < 0.4) {
            variation.ornaments = VARIATIONS.folk_ornaments;
        }
        return variation;
    }
};
